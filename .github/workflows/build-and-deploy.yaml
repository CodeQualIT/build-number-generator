# File: .github/workflows/build-and-deploy.yml
name: Build and Deploy

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate build number
        uses: ./.github/actions/generate-build-number

      - name: Setup Gradle
        uses: ./.github/actions/setup-gradle
        with:
          java-version: '21'

      - name: Generate version
        uses: ./.github/actions/generate-version

      - name: Build and test
        run: ./gradlew clean build -Pversion=${{ env.TAG }}

      - name: Build and push Docker image
        uses: ./.github/actions/build-and-push-docker-image
        with:
          docker-username: ${{ secrets.DOCKER_USERNAME }}
          docker-password: ${{ secrets.DOCKER_PASSWORD }}
          snapshot-docker-host: ${{ vars.SNAPSHOT_DOCKER_HOST }}
          release-docker-host: ${{ vars.RELEASE_DOCKER_HOST }}

      - name: Export environment variables
        shell: bash
        id: export_build_env_vars
        run: |
          echo "TAG=${{ env.TAG }}" >> $GITHUB_OUTPUT
    outputs:
      tag: ${{ steps.export_build_env_vars.outputs.TAG }}

#  deploy-to-prod:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Import environment variables
#        shell: bash
#        id: import_deploy-to-prod_env_vars
#        run: |
#          echo "TAG=${{ needs.build.outputs.tag }}" >> $GITHUB_ENV
#
#      - name: Generate and Deploy to testing
#        uses: ./.github/actions/generate-and-deploy-k8s-manifest
#        with:
#          config-file-name: 'build-number-generator.yaml'
#          config-repository-base: 'CodeQualIT/cqit-config-'
#          target-environment: 'production'
#          github-token: ${{ secrets.CONFIG_REPO_TOKEN }}
